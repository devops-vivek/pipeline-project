def artifactname = "sp-boot-app.jar"
def repoName = "sp-boot-app-repo"
def pipelineName = "devops_vk_pipeline"
def semanticVersion = "${env.BUILD_NUMBER}.0.0"
def packageName = "spboot-package_${env.BUILD_NUMBER}"
def version = "${env.BUILD_NUMBER}.0"

pipeline {
    agent any
    tools {
        maven 'Maven'
    }
    stages {
        stage("checkout") {
            steps {
                
                echo "Building Pipeline" 
                checkout scm
            }
        }

        stage("build") {
            steps {
                
                sh 'mvn clean install -DskipTests'
                echo 'Building..Pipeline'
                echo "Pipeline name is ${env.JOB_NAME}"
 				echo "Pipleine run rumber is ${env.BUILD_NUMBER}"
 				echo "Stage name is ${env.STAGE_NAME}"
 				echo "GIT branch is ${env.GIT_BRANCH}"
                echo "globalprops -- ${env.snartifacttoolId} -- ${env.snhost} -- ${env.snuser} -- ${env.snpassword} ";
        }
       }
        
	stage('unit-tests') {
            steps {
               snDevOpsArtifact(artifactsPayload:"""{"artifacts": [{"name": "devops_pipeline_demo.jar","version": "${version}","semanticVersion": "${semanticVersion}","repositoryName": "devops_pipeline_demo"}],"stageName": "unit-tests"}""")            

                echo "Unit Test"
                sh "mvn test"
                sleep 5
		snDevOpsChange()

            }
            post {
                always {
                    junit '**/target/surefire-reports/*.xml' 
                }
          }
        }
	
        stage("deploy") {
            stages{
                stage('deploy to dev') {
                    when{
                        branch 'dev'
                    }
                    steps{
                        
                        echo "deploy in UAT"
                        snDevOpsChange(changeRequestDetails: """ {
	"setCloseCode": true,
	"attributes": {
		"description": "DevOps test ",
		"priority": "5",
		"justification": "Connect your planning ",
		"implementation_plan": "Test implementation plan",
		"test_plan": "Test plan to test the tests which test the test-now application",
		"cmdb_ci": "0c43bc5fc61122750182c13269a7a3ef",
		"business_service":"26da329f0a0a0bb400f69d8159bc753d",
		"type":"emergency"
	}
} """)

                    }
                }
                stage('deploy to prod') {
                    when {
                        branch 'master'
                    }
                    steps{
			snDevOpsPackage(name: "balu-package", artifactsPayload:"""{"artifacts": [{"name": "devops_pipeline_demo.jar","version": "${version}","semanticVersion": "${semanticVersion}","repositoryName": "devops_pipeline_demo"}],"stageName": "deploy"}""")            
			snDevOpsChange(changeRequestDetails: """ {
	"setCloseCode": true,
	"attributes": {
		"description": "DevOps test ",
		"priority": "5",
		"requested_by": {
			"email": "abel.tuter@example.com"
		},
		"justification": "Connect your planning ",
		"implementation_plan": "Test implementation plan",
		"test_plan": "Test plan to test the tests which test the test-now application",
		"cmdb_ci": "0c43bc5fc61122750182c13269a7a3ef",
		"business_service":"26da329f0a0a0bb400f69d8159bc753d",
		"type":"emergency"
	}
} """)
                        echo "deploy in prod"
                   }
                }
            }
        }
	
    }

}
